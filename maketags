#!/usr/bin/env perl
#
# Maintains a tree of symbolic link tags for BibTeX entries.
#
# Copyright (C) 2011 Jason R. Blevins
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation  and/or other materials provided with the distribution.
# 3. Neither the names of the copyright holders nor the names of any
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

use strict;
use warnings;

use Text::BibTeX;
use File::Path qw(make_path);

my $archive = $ENV{"HOME"} . "/archive";
my $bib = $ENV{"HOME"} . "/gtd/research.bib";

my $bibfile = new Text::BibTeX::File "$bib"
  or die "research.bib: $!\n";
$bibfile->set_structure('Bib');

while (my $entry = new Text::BibTeX::Entry $bibfile) {
    if ($entry->parse_ok) {

        if ($entry->metatype eq BTE_REGULAR) {
            my $key = $entry->key;

            if ($key) {

                my $dir = undef;
                my $ext = undef;

                if (-e "$archive/articles/$key.pdf") {
                    $dir = "articles";
                    $ext = "pdf";
                } elsif (-e "$archive/books/$key.djvu") {
                    $dir = "books";
                    $ext = "djvu";
                } elsif (-e "$archive/books/$key.pdf") {
                    $dir = "books";
                    $ext = "pdf";
                }

                if ($ext) {
                    my $tags = $entry->get('keywords');

                    if ($tags) {
                        my @tagarr = split(/[,;]/, $tags);

                        foreach my $tag (@tagarr) {
                            $tag =~ s/^\s+//;
                            $tag =~ s/\s+$//;
                            $tag =~ s/[ ]/-/g;
                            $tag = lc($tag);
                            print "Tagging $key as $tag\n";
                            my $tagdir = "$archive/tags/$tag";
                            make_path($tagdir) unless (-d $tagdir);
                            my $fn = "../../$dir/$key.$ext";
                            my $linkfn = "$tagdir/$key.$ext";
                            symlink $fn, $linkfn;
                        }
                    }
                }
            }
        }
    } else {
        warn "Error parsing file!";
    }
}
